openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is application for a library. When, user take the one book or more\ 
    books, to application can indicating  which the book and how many books \
    was user took.
    This app can save data, so what the book, author who is, when was \
    the birthday of author, and who take the book.
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  version: 1.0.11
servers:
  - url: ~/api/v1
paths:
  /authors/{index}:
    put:
      tags:
        - author
      summary: Get single position for update one or more data
      description: |-
        Here, can change the one or everything data from Author's table of db.\
        You can will change the all properties, this is 'firstname', 'secondname' and \
        'birthday' or only one from everything properties.
      operationId: author_one_change
      parameters:
        - name: index
          in: path
          required: true
          description: "This is ID (index single position) from db."
          allowEmptyValue: false
          schema:
            type: integer
          example: 2
      requestBody:
        required: true
        description:  Update an existing position from the library
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Author_request'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client_response'
        '400':
          description:  Something what wrong. Maybe Invalid 'index' supplied.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Client_response'
              example:
                message: "Not Ok"
                status: false
      security:
        - petstore_auth:
            - write:client
            - read:client
components:
  schemas:
    Author_request:
      type: object
      properties:
        firstname:
          type: string
          nullable: true
          example: Igor
          description: |-
            Is it a value: Igor. But, you need
            to look into the this parameters. One parameter (this is 'firstname' or
            'birthday') from everything must contain. For a 'firstname' data this is
            a string type. Example: 'Igor'. If, there we have value null, 
            it means what parameter 'birthday' must contain the type string, 
            but not null
        birthday:
          type: string
          nullable: true
          description: |-
            Is it a value date. But, you need to look into the this parameters.
            For a 'birthday' data this is a string type.
            Example: '2024-06-10' or '2024.06.10'. If there we have value 
            null. it means what parameter 'firstname' must contain 
            the type string, but not null.
          example: "2024-06-10"
          format: date-time
        secondname:
          type: string
          nullable: true
          description: |-
            You can indicate string type or null. Example thi is 'Igorev' \
            or null
          example: "Igorev"
    Client_response:
      type: object
      properties:
        message:
          type: string
          example: 'Ok'
        result:
          oneOf:
            - type: boolean
              nullable: true
              example: true
            - type: object
              example:
                - birthday: "1980-06-25T00:00:00"
                  firstname: "Igor"
                  index: 1
  requestBodies:
    Client_request:
      description: Pet object that needs to be added to the store
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Author_request'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://example.com/oauth/authorize
          scopes:
            write:pets: "Modify pets in your account"
            read:pets: "Read your pets"
